#summary Information on getting Cyclus from the repository and building it on a new system
#labels Phase-Deploy

== Requirements == 

The Cyclus code requires the following software and libraries.

||Package                || Minimum Version  || 
|| `CMake`               ||  2.8             ||    
|| `HDF5`                ||  1.8.3           ||
|| `libxml2`             ||  2               ||  
|| `boost`               ||  1.34.1          ||  
|| `lapack`              ||  3.4.0           ||  
|| `trilinos (teuchos)`  ||  10.8.4          ||  

An overview of some more complicated package builds and installations (e.g. lapack, teuchos, etc.) can be found on the InstallingDependenciesOnUnix or InstallingDependenciesOnWindows wiki pages.

== Repository ==

The Cyclus repository is version controlled using the subversion (SVN) version control system. It is hosted externally with googlecode and mirrored internally on the CNERG space.
  * The main repository is located at http://cyclus.googlecode.com/svn/
  * There is a *read only* mirror at file:////home/cnerg/svn/cyclus-mirror
  * Anyone may check out the code. 
    * You do not have to register with googlecode if you do not have a google id, but anonymous users may never commit.
    * Note that the googlecode password for your google id is generated by google and you can find it at [https://code.google.com/hosting/settings]
    * To check out the code follow the [https://code.google.com/p/cyclus/source/checkout googlecode checkout instructions] . 
  * Once you have checked out the code, you may commit a change to the google code repository if you are authorized as a committer .
    * To become a committer, you must ask for permission via email from one of the project owners ( currently [https://code.google.com/u/katyhuff/ Katy] or [https://code.google.com/u/uwgonuke Paul] )
    * Committing happens from your checked out copy of the repository.
      * For example, say you have the google username USERNAME and google password PASSWORD and are sitting in the cyclus/trunk/src directory of your checked out copy. You may want to commit your changes to a version controlled file called FILENAME. To do this you would type.
{{{
svn commit FILENAME --username USERNAME --password PASSWORD
}}}
      * Google may prompt you for your password if you do not include the --username and --password flags.
      * Alternatively, if you are sitting in a directory in which you want to commit all of your changes at once, you would type:
{{{
~ : svn commit
}}}
      * If instead FILENAME is a brand new file, not yet under version control, you can use the svn command add:
{{{
~: svn add FILENAME
~: svn commit 
}}}
      * For some users, svn commit and svn add will not work and you may need to use the import command:
{{{
~: svn import FILENAME https://cyclus.googlecode.com/trunk/src/FILENAME --username USERNAME --password PASSWORD
}}}
    * The two repositories (the trunk on the CNERG space and the trunk on googlecode) are synchronized using svnsync.

== Build System ==

In order to facilitate future compatibility with multiple platforms, Cyclus is built using [link: http://www.cmake.org Cmake]. This relies on CMake version 2.6 or higher and the CMakeLists.txt file in /cyclus/trunk/src/. It is recommended that you use CMake to build the Cyclus executable external to the source code. To do this, execute the following steps:
{{{
/cyclus/trunk/$ mkdir build
/cyclus/trunk/$ cd build
cyclus/trunk/build$ cmake ../src
}}}
You should see output like this:
{{{
...
...
>> -- Configuring done
>> -- Generating done
>> -- Build files have been written to: /cyclus/trunk/build
/cyclus/trunk/build$ make cyclus
>> Scanning dependencies of target cyclus
...
...
>> [100%] Building CXX object CMakeFiles/cyclus.dir/SourceFac.cpp.o
>> Linking CXX executable cyclus
>> [100%] Built target cyclus
}}}
Now, you can make cyclus, and run it with some input file, for this example, call it input.xml.
{{{
cyclus/trunk/build$ make
cyclus/trunk/build$ ./cyclus input.xml
}}}

== Debugging Build ==

If you are a developer, you may be interested in building Cyclus in such a was as to facilitate debugging. It is recommended that you create second build directory in which you'll build a Cyclus executable for which optimizations are disabled and debug symbols are added. To do this, execute the following steps:
{{{
/cyclus/trunk$ mkdir debug
/cyclus/trunk$ cd debug
/cyclus/trunk/debug$ cmake -DCMAKE_BUILD_TYPE:STRING=Debug ../src
}}}
As before, you should call make to actually build the cyclus executable.
{{{
/cyclus/trunk/debug$ make
}}}
Now when you call gdb, ddd, or some other debugger within this debug directory it will recognize the target as a debuggable target. To debug a run for some input file input.xml, try the following:
{{{
/cyclus/trunk/debug$ ddd ./cyclus input.xml
}}}

== Environment ==
In order to utlize the `RelaxNG` input schema, it is necessary to set an environment variable that directs our search algorithm to your cyclus.rng file. That is, before you run cyclus, you must set the environment variable CYCLUS_SRC_DIR to the path to your src directory. 
